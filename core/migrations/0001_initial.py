# Generated by Django 5.2.4 on 2025-08-01 13:19

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        max_length=255,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                ("street_number", models.CharField(max_length=20)),
                ("city_code", models.CharField(db_index=True, max_length=20)),
                (
                    "city",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["city_code"], name="core_addres_city_co_e197e3_idx"
                    ),
                    models.Index(
                        fields=["city", "country"], name="core_addres_city_655f20_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                            ("Prefer not to say", "Prefer not to say"),
                        ],
                        max_length=20,
                    ),
                ),
                ("customer_id", models.CharField(max_length=50, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "birthday",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(1900, 1, 1),
                                message="Birthday cannot be before 1900",
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date.today,
                                message="Birthday cannot be in the future",
                            ),
                        ],
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="core.address",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="CustomerRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField()),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(blank=True, null=True)),
                (
                    "appuser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="relationships",
                        to="core.appuser",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="appuser",
            index=models.Index(
                fields=["first_name"], name="core_appuse_first_n_1a80a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appuser",
            index=models.Index(
                fields=["last_name"], name="core_appuse_last_na_75f401_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appuser",
            index=models.Index(
                fields=["customer_id"], name="core_appuse_custome_b4a91f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appuser",
            index=models.Index(
                fields=["created"], name="core_appuse_created_9ed5b7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appuser",
            index=models.Index(
                fields=["address"], name="core_appuse_address_42d4ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerrelationship",
            index=models.Index(
                fields=["appuser"], name="core_custom_appuser_2afa1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerrelationship",
            index=models.Index(
                fields=["created"], name="core_custom_created_497cba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerrelationship",
            index=models.Index(
                fields=["last_activity"], name="core_custom_last_ac_8a35d2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customerrelationship",
            unique_together={("appuser", "created")},
        ),
    ]
